

*** Wisent thrift-wy.el - 2022-11-06 19:05

NULLABLE
	Program: yes
	CaptureDocText: yes
	DestroyDocText: yes
	HeaderList: yes
	Header: no
	Include: no
	DefinitionList: yes
	Definition: no
	TypeDefinition: no
	CommaOrSemicolonOptional: yes
	Typedef: no
	Enum: no
	EnumDefList: yes
	EnumDef: no
	EnumValue: no
	Const: no
	ConstValue: yes
	ConstList: yes
	ConstListContents: yes
	ConstMap: no
	ConstMapContents: yes
	StructHead: no
	Struct: no
	XsdAll: yes
	XsdOptional: yes
	XsdNillable: yes
	XsdAttributes: yes
	Xception: no
	Service: no
	FlagArgs: yes
	UnflagArgs: yes
	Extends: yes
	FunctionList: yes
	Function: no
	Oneway: yes
	Throws: yes
	FieldList: yes
	Field: no
	FieldName: no
	FieldIdentifier: yes
	FieldReference: yes
	FieldRequiredness: yes
	FieldValue: yes
	FunctionType: no
	FieldType: no
	BaseType: no
	SimpleBaseType: no
	ContainerType: no
	SimpleContainerType: no
	MapType: no
	SetType: no
	ListType: no
	CppType: yes
	TypeAnnotations: yes
	TypeAnnotationList: yes
	TypeAnnotation: no
	TypeAnnotationValue: yes





FIRSTS



Program firsts

		55 (Program)
		58 (HeaderList)


CaptureDocText firsts

		56 (CaptureDocText)


DestroyDocText firsts

		57 (DestroyDocText)


HeaderList firsts

		58 (HeaderList)


Header firsts

		59 (Header)
		60 (Include)


Include firsts

		60 (Include)


DefinitionList firsts

		61 (DefinitionList)


Definition firsts

		62 (Definition)
		63 (TypeDefinition)
		65 (Typedef)
		66 (Enum)
		70 (Const)
		76 (StructHead)
		77 (Struct)
		82 (Xception)
		83 (Service)


TypeDefinition firsts

		63 (TypeDefinition)
		65 (Typedef)
		66 (Enum)
		76 (StructHead)
		77 (Struct)
		82 (Xception)


CommaOrSemicolonOptional firsts

		64 (CommaOrSemicolonOptional)


Typedef firsts

		65 (Typedef)


Enum firsts

		66 (Enum)


EnumDefList firsts

		67 (EnumDefList)


EnumDef firsts

		56 (CaptureDocText)
		68 (EnumDef)


EnumValue firsts

		69 (EnumValue)


Const firsts

		70 (Const)


ConstValue firsts

		71 (ConstValue)
		72 (ConstList)
		74 (ConstMap)


ConstList firsts

		72 (ConstList)


ConstListContents firsts

		73 (ConstListContents)


ConstMap firsts

		74 (ConstMap)


ConstMapContents firsts

		75 (ConstMapContents)


StructHead firsts

		76 (StructHead)


Struct firsts

		76 (StructHead)
		77 (Struct)


XsdAll firsts

		78 (XsdAll)


XsdOptional firsts

		79 (XsdOptional)


XsdNillable firsts

		80 (XsdNillable)


XsdAttributes firsts

		81 (XsdAttributes)


Xception firsts

		82 (Xception)


Service firsts

		83 (Service)


FlagArgs firsts

		84 (FlagArgs)


UnflagArgs firsts

		85 (UnflagArgs)


Extends firsts

		86 (Extends)


FunctionList firsts

		87 (FunctionList)


Function firsts

		56 (CaptureDocText)
		88 (Function)


Oneway firsts

		89 (Oneway)


Throws firsts

		90 (Throws)


FieldList firsts

		91 (FieldList)


Field firsts

		56 (CaptureDocText)
		92 (Field)


FieldName firsts

		93 (FieldName)


FieldIdentifier firsts

		94 (FieldIdentifier)


FieldReference firsts

		95 (FieldReference)


FieldRequiredness firsts

		96 (FieldRequiredness)


FieldValue firsts

		97 (FieldValue)


FunctionType firsts

		98 (FunctionType)
		99 (FieldType)
		100 (BaseType)
		101 (SimpleBaseType)
		102 (ContainerType)
		103 (SimpleContainerType)
		104 (MapType)
		105 (SetType)
		106 (ListType)


FieldType firsts

		99 (FieldType)
		100 (BaseType)
		101 (SimpleBaseType)
		102 (ContainerType)
		103 (SimpleContainerType)
		104 (MapType)
		105 (SetType)
		106 (ListType)


BaseType firsts

		100 (BaseType)
		101 (SimpleBaseType)


SimpleBaseType firsts

		101 (SimpleBaseType)


ContainerType firsts

		102 (ContainerType)
		103 (SimpleContainerType)
		104 (MapType)
		105 (SetType)
		106 (ListType)


SimpleContainerType firsts

		103 (SimpleContainerType)
		104 (MapType)
		105 (SetType)
		106 (ListType)


MapType firsts

		104 (MapType)


SetType firsts

		105 (SetType)


ListType firsts

		106 (ListType)


CppType firsts

		107 (CppType)


TypeAnnotations firsts

		108 (TypeAnnotations)


TypeAnnotationList firsts

		109 (TypeAnnotationList)


TypeAnnotation firsts

		110 (TypeAnnotation)


TypeAnnotationValue firsts

		111 (TypeAnnotationValue)



FDERIVES


Program derives

   1
   4
   5


CaptureDocText derives

   2


DestroyDocText derives

   3


HeaderList derives

   4
   5


Header derives

   6
   7
   8
   9
   10


Include derives

   10


DefinitionList derives

   11
   12


Definition derives

   13
   14
   15
   16
   17
   18
   19
   23
   24
   30
   44
   45
   46
   55
   56


TypeDefinition derives

   16
   17
   18
   19
   23
   24
   44
   45
   46
   55


CommaOrSemicolonOptional derives

   20
   21
   22


Typedef derives

   23


Enum derives

   24


EnumDefList derives

   25
   26


EnumDef derives

   2
   27


EnumValue derives

   28
   29


Const derives

   30


ConstValue derives

   31
   32
   33
   34
   35
   36
   37
   38
   41


ConstList derives

   37
   38


ConstListContents derives

   39
   40


ConstMap derives

   41


ConstMapContents derives

   42
   43


StructHead derives

   44
   45


Struct derives

   44
   45
   46


XsdAll derives

   47
   48


XsdOptional derives

   49
   50


XsdNillable derives

   51
   52


XsdAttributes derives

   53
   54


Xception derives

   55


Service derives

   56


FlagArgs derives

   57


UnflagArgs derives

   58


Extends derives

   59
   60


FunctionList derives

   61
   62


Function derives

   2
   63


Oneway derives

   64
   65
   66


Throws derives

   67
   68


FieldList derives

   69
   70


Field derives

   2
   71


FieldName derives

   72
   73
   74
   75
   76
   77
   78
   79
   80
   81
   82
   83
   84
   85
   86
   87
   88
   89
   90
   91
   92
   93
   94
   95
   96
   97
   98
   99
   100
   101
   102
   103


FieldIdentifier derives

   104
   105


FieldReference derives

   106
   107


FieldRequiredness derives

   108
   109
   110


FieldValue derives

   111
   112


FunctionType derives

   113
   114
   115
   116
   117
   118
   119
   120
   121
   122
   123
   124
   125
   126
   127
   128
   129
   130
   131
   132
   133
   134
   135


FieldType derives

   115
   116
   117
   118
   119
   120
   121
   122
   123
   124
   125
   126
   127
   128
   129
   130
   131
   132
   133
   134
   135


BaseType derives

   118
   119
   120
   121
   122
   123
   124
   125
   126
   127
   128


SimpleBaseType derives

   119
   120
   121
   122
   123
   124
   125
   126
   127
   128


ContainerType derives

   129
   130
   131
   132
   133
   134
   135


SimpleContainerType derives

   130
   131
   132
   133
   134
   135


MapType derives

   133


SetType derives

   134


ListType derives

   135


CppType derives

   136
   137


TypeAnnotations derives

   138
   139


TypeAnnotationList derives

   140
   141


TypeAnnotation derives

   142


TypeAnnotationValue derives

   143
   144


closure n = 3

   0
   5
   9


closure n = 5

   1
   4
   6
   27
   31


closure n = 6

   7
   10
   12
   17
   21
   24


closure n = 3

   2
   3
   28


closure n = 1

   25


closure n = 2

   13
   18


closure n = 1

   22


closure n = 1

   8


closure n = 1

   11


closure n = 16

   29
   32
   34
   36
   38
   40
   42
   44
   51
   57
   79
   119
   121
   123
   146
   153


closure n = 1

   26


closure n = 1

   14


closure n = 1

   19


closure n = 1

   23


closure n = 22

   52
   296
   298
   300
   302
   305
   307
   309
   311
   313
   315
   317
   319
   321
   323
   325
   328
   330
   332
   334
   342
   348


closure n = 1

   120


closure n = 1

   147


closure n = 1

   154


closure n = 1

   58


closure n = 22

   80
   296
   298
   300
   302
   305
   307
   309
   311
   313
   315
   317
   319
   321
   323
   325
   328
   330
   332
   334
   342
   348


closure n = 1

   122


closure n = 1

   30


closure n = 1

   35


closure n = 1

   39


closure n = 1

   41


closure n = 1

   33


closure n = 1

   124


closure n = 1

   43


closure n = 1

   45


closure n = 1

   37


closure n = 3

   15
   358
   362


closure n = 1

   20


closure n = 1

   297


closure n = 1

   312


closure n = 1

   306


closure n = 1

   308


closure n = 1

   310


closure n = 1

   314


closure n = 1

   316


closure n = 1

   318


closure n = 1

   320


closure n = 1

   322


closure n = 1

   324


closure n = 3

   335
   354
   357


closure n = 3

   349
   354
   357


closure n = 3

   343
   354
   357


closure n = 1

   53


closure n = 1

   299


closure n = 3

   303
   358
   362


closure n = 1

   301


closure n = 3

   326
   358
   362


closure n = 1

   329


closure n = 1

   331


closure n = 1

   333


closure n = 1

   148


closure n = 3

   155
   165
   168


closure n = 1

   59


closure n = 1

   81


closure n = 3

   125
   131
   133


closure n = 3

   359
   363
   366


closure n = 1

   16


closure n = 1

   355


closure n = 1

   336


closure n = 1

   350


closure n = 1

   344


closure n = 3

   54
   358
   362


closure n = 1

   304


closure n = 1

   327


closure n = 3

   149
   195
   198


closure n = 1

   166


closure n = 1

   156


closure n = 3

   60
   64
   67


closure n = 1

   82


closure n = 1

   132


closure n = 1

   126


closure n = 3

   360
   364
   367


closure n = 1

   356


closure n = 22

   296
   298
   300
   302
   305
   307
   309
   311
   313
   315
   317
   319
   321
   323
   325
   328
   330
   332
   334
   337
   342
   348


closure n = 22

   296
   298
   300
   302
   305
   307
   309
   311
   313
   315
   317
   319
   321
   323
   325
   328
   330
   332
   334
   342
   348
   351


closure n = 22

   296
   298
   300
   302
   305
   307
   309
   311
   313
   315
   317
   319
   321
   323
   325
   328
   330
   332
   334
   342
   345
   348


closure n = 4

   46
   48
   50
   55


closure n = 4

   3
   150
   196
   199


closure n = 1

   167


closure n = 2

   157
   163


closure n = 4

   3
   61
   65
   68


closure n = 10

   83
   86
   88
   90
   92
   94
   96
   98
   102
   108


closure n = 3

   127
   195
   198


closure n = 3

   368
   371
   374


closure n = 1

   361


closure n = 1

   365


closure n = 1

   338


closure n = 1

   352


closure n = 1

   346


closure n = 1

   47


closure n = 1

   49


closure n = 1

   56


closure n = 3

   151
   358
   362


closure n = 3

   200
   276
   279


closure n = 1

   197


closure n = 3

   158
   169
   172


closure n = 3

   62
   358
   362


closure n = 3

   69
   73
   77


closure n = 1

   66


closure n = 1

   93


closure n = 1

   91


closure n = 1

   87


closure n = 1

   89


closure n = 3

   109
   112
   118


closure n = 3

   99
   103
   107


closure n = 4

   46
   48
   50
   84


closure n = 1

   95


closure n = 1

   97


closure n = 4

   3
   128
   196
   199


closure n = 1

   372


closure n = 4

   46
   48
   50
   369


closure n = 22

   296
   298
   300
   302
   305
   307
   309
   311
   313
   315
   317
   319
   321
   323
   325
   328
   330
   332
   334
   339
   342
   348


closure n = 1

   353


closure n = 1

   347


closure n = 1

   152


closure n = 1

   277


closure n = 4

   201
   283
   285
   287


closure n = 5

   3
   159
   164
   170
   173


closure n = 1

   63


closure n = 2

   74
   78


closure n = 3

   70
   358
   362


closure n = 11

   86
   88
   90
   92
   94
   96
   98
   102
   108
   110
   113


closure n = 11

   86
   88
   90
   92
   94
   96
   98
   100
   102
   104
   108


closure n = 1

   85


closure n = 3

   129
   358
   362


closure n = 1

   373


closure n = 1

   370


closure n = 1

   340


closure n = 1

   278


closure n = 1

   284


closure n = 1

   286


closure n = 22

   202
   296
   298
   300
   302
   305
   307
   309
   311
   313
   315
   317
   319
   321
   323
   325
   328
   330
   332
   334
   342
   348


closure n = 4

   174
   184
   186
   188


closure n = 1

   160


closure n = 1

   171


closure n = 1

   75


closure n = 4

   46
   48
   50
   71


closure n = 1

   111


closure n = 1

   114


closure n = 1

   101


closure n = 4

   46
   48
   50
   105


closure n = 1

   130


closure n = 1

   341


closure n = 3

   203
   280
   282


closure n = 1

   185


closure n = 1

   187


closure n = 24

   175
   292
   294
   296
   298
   300
   302
   305
   307
   309
   311
   313
   315
   317
   319
   321
   323
   325
   328
   330
   332
   334
   342
   348


closure n = 3

   161
   358
   362


closure n = 1

   76


closure n = 1

   72


closure n = 10

   86
   88
   90
   92
   94
   96
   98
   102
   108
   115


closure n = 1

   106


closure n = 1

   281


closure n = 33

   204
   212
   214
   216
   218
   220
   222
   224
   226
   228
   230
   232
   234
   236
   238
   240
   242
   244
   246
   248
   250
   252
   254
   256
   258
   260
   262
   264
   266
   268
   270
   272
   274


closure n = 1

   295


closure n = 1

   176


closure n = 1

   293


closure n = 1

   162


closure n = 4

   46
   48
   50
   116


closure n = 1

   213


closure n = 1

   221


closure n = 1

   215


closure n = 1

   217


closure n = 1

   219


closure n = 1

   223


closure n = 1

   225


closure n = 1

   239


closure n = 1

   241


closure n = 1

   243


closure n = 1

   227


closure n = 1

   229


closure n = 1

   231


closure n = 1

   233


closure n = 1

   235


closure n = 1

   237


closure n = 1

   245


closure n = 1

   247


closure n = 1

   249


closure n = 1

   251


closure n = 1

   253


closure n = 1

   255


closure n = 1

   257


closure n = 1

   261


closure n = 1

   265


closure n = 1

   263


closure n = 1

   267


closure n = 1

   269


closure n = 1

   271


closure n = 1

   273


closure n = 1

   275


closure n = 1

   259


closure n = 3

   205
   288
   291


closure n = 1

   177


closure n = 1

   117


closure n = 10

   86
   88
   90
   92
   94
   96
   98
   102
   108
   289


closure n = 3

   134
   136
   206


closure n = 3

   178
   195
   198


closure n = 1

   290


closure n = 1

   135


closure n = 3

   137
   139
   207


closure n = 4

   3
   179
   196
   199


closure n = 1

   138


closure n = 3

   140
   145
   208


closure n = 3

   180
   189
   194


closure n = 1

   141


closure n = 3

   209
   358
   362


closure n = 1

   190


closure n = 3

   181
   358
   362


closure n = 3

   142
   195
   198


closure n = 4

   46
   48
   50
   210


closure n = 3

   191
   195
   198


closure n = 4

   46
   48
   50
   182


closure n = 4

   3
   143
   196
   199


closure n = 1

   211


closure n = 4

   3
   192
   196
   199


closure n = 1

   183


closure n = 1

   144


closure n = 1

   193
State 126 contains 7 shift/reduce conflicts.
State 144 contains 2 shift/reduce conflicts.
State 154 contains 6 shift/reduce conflicts.
State 198 contains 2 shift/reduce conflicts.


Grammar

  Number, Rule
  1       Program -> HeaderList DefinitionList
  2       CaptureDocText -> /* empty */
  3       DestroyDocText -> /* empty */
  4       HeaderList -> HeaderList DestroyDocText Header
  5       HeaderList -> /* empty */
  6       Header -> Include
  7       Header -> tok_namespace tok_identifier tok_identifier TypeAnnotations
  8       Header -> tok_namespace '*' tok_identifier
  9       Header -> tok_cpp_include tok_literal
  10      Include -> tok_include tok_literal
  11      DefinitionList -> DefinitionList CaptureDocText Definition
  12      DefinitionList -> /* empty */
  13      Definition -> Const
  14      Definition -> TypeDefinition
  15      Definition -> Service
  16      TypeDefinition -> Typedef
  17      TypeDefinition -> Enum
  18      TypeDefinition -> Struct
  19      TypeDefinition -> Xception
  20      CommaOrSemicolonOptional -> ','
  21      CommaOrSemicolonOptional -> ';'
  22      CommaOrSemicolonOptional -> /* empty */
  23      Typedef -> tok_typedef FieldType tok_identifier TypeAnnotations CommaOrSemicolonOptional
  24      Enum -> tok_enum tok_identifier '{' EnumDefList '}' TypeAnnotations
  25      EnumDefList -> EnumDefList EnumDef
  26      EnumDefList -> /* empty */
  27      EnumDef -> CaptureDocText EnumValue TypeAnnotations CommaOrSemicolonOptional
  28      EnumValue -> tok_identifier '=' tok_int_constant
  29      EnumValue -> tok_identifier
  30      Const -> tok_const FieldType tok_identifier '=' ConstValue CommaOrSemicolonOptional
  31      ConstValue -> tok_int_constant
  32      ConstValue -> tok_dub_constant
  33      ConstValue -> tok_literal
  34      ConstValue -> tok_identifier
  35      ConstValue -> ConstList
  36      ConstValue -> ConstMap
  37      ConstList -> '[' ConstListContents ']'
  38      ConstList -> /* empty */
  39      ConstListContents -> ConstListContents ConstValue CommaOrSemicolonOptional
  40      ConstListContents -> /* empty */
  41      ConstMap -> '{' ConstMapContents '}'
  42      ConstMapContents -> ConstMapContents ConstValue ':' ConstValue CommaOrSemicolonOptional
  43      ConstMapContents -> /* empty */
  44      StructHead -> tok_struct
  45      StructHead -> tok_union
  46      Struct -> StructHead tok_identifier XsdAll '{' FieldList '}' TypeAnnotations
  47      XsdAll -> tok_xsd_all
  48      XsdAll -> /* empty */
  49      XsdOptional -> tok_xsd_optional
  50      XsdOptional -> /* empty */
  51      XsdNillable -> tok_xsd_nillable
  52      XsdNillable -> /* empty */
  53      XsdAttributes -> tok_xsd_attrs '{' FieldList '}'
  54      XsdAttributes -> /* empty */
  55      Xception -> tok_xception tok_identifier '{' FieldList '}' TypeAnnotations
  56      Service -> tok_service tok_identifier Extends '{' FlagArgs FunctionList UnflagArgs '}' TypeAnnotations
  57      FlagArgs -> /* empty */
  58      UnflagArgs -> /* empty */
  59      Extends -> tok_extends tok_identifier
  60      Extends -> /* empty */
  61      FunctionList -> FunctionList Function
  62      FunctionList -> /* empty */
  63      Function -> CaptureDocText Oneway FunctionType tok_identifier '(' FieldList ')' Throws TypeAnnotations CommaOrSemicolonOptional
  64      Oneway -> tok_oneway
  65      Oneway -> tok_async
  66      Oneway -> /* empty */
  67      Throws -> tok_throws '(' FieldList ')'
  68      Throws -> /* empty */
  69      FieldList -> FieldList Field
  70      FieldList -> /* empty */
  71      Field -> CaptureDocText FieldIdentifier FieldRequiredness FieldType FieldReference FieldName FieldValue XsdOptional XsdNillable XsdAttributes TypeAnnotations CommaOrSemicolonOptional
  72      FieldName -> tok_identifier
  73      FieldName -> tok_namespace
  74      FieldName -> tok_cpp_include
  75      FieldName -> tok_cpp_type
  76      FieldName -> tok_include
  77      FieldName -> tok_void
  78      FieldName -> tok_bool
  79      FieldName -> tok_byte
  80      FieldName -> tok_i8
  81      FieldName -> tok_i16
  82      FieldName -> tok_i32
  83      FieldName -> tok_i64
  84      FieldName -> tok_double
  85      FieldName -> tok_string
  86      FieldName -> tok_binary
  87      FieldName -> tok_uuid
  88      FieldName -> tok_map
  89      FieldName -> tok_list
  90      FieldName -> tok_set
  91      FieldName -> tok_oneway
  92      FieldName -> tok_async
  93      FieldName -> tok_typedef
  94      FieldName -> tok_struct
  95      FieldName -> tok_union
  96      FieldName -> tok_xception
  97      FieldName -> tok_extends
  98      FieldName -> tok_throws
  99      FieldName -> tok_service
  100     FieldName -> tok_enum
  101     FieldName -> tok_const
  102     FieldName -> tok_required
  103     FieldName -> tok_optional
  104     FieldIdentifier -> tok_int_constant ':'
  105     FieldIdentifier -> /* empty */
  106     FieldReference -> tok_reference
  107     FieldReference -> /* empty */
  108     FieldRequiredness -> tok_required
  109     FieldRequiredness -> tok_optional
  110     FieldRequiredness -> /* empty */
  111     FieldValue -> '=' ConstValue
  112     FieldValue -> /* empty */
  113     FunctionType -> FieldType
  114     FunctionType -> tok_void
  115     FieldType -> tok_identifier
  116     FieldType -> BaseType
  117     FieldType -> ContainerType
  118     BaseType -> SimpleBaseType TypeAnnotations
  119     SimpleBaseType -> tok_string
  120     SimpleBaseType -> tok_binary
  121     SimpleBaseType -> tok_uuid
  122     SimpleBaseType -> tok_bool
  123     SimpleBaseType -> tok_byte
  124     SimpleBaseType -> tok_i8
  125     SimpleBaseType -> tok_i16
  126     SimpleBaseType -> tok_i32
  127     SimpleBaseType -> tok_i64
  128     SimpleBaseType -> tok_double
  129     ContainerType -> SimpleContainerType TypeAnnotations
  130     SimpleContainerType -> MapType
  131     SimpleContainerType -> SetType
  132     SimpleContainerType -> ListType
  133     MapType -> tok_map CppType '<' FieldType ',' FieldType '>'
  134     SetType -> tok_set CppType '<' FieldType '>'
  135     ListType -> tok_list CppType '<' FieldType '>'
  136     CppType -> tok_cpp_type tok_literal
  137     CppType -> /* empty */
  138     TypeAnnotations -> '(' TypeAnnotationList ')'
  139     TypeAnnotations -> /* empty */
  140     TypeAnnotationList -> TypeAnnotationList TypeAnnotation
  141     TypeAnnotationList -> /* empty */
  142     TypeAnnotation -> tok_identifier TypeAnnotationValue CommaOrSemicolonOptional
  143     TypeAnnotationValue -> '=' tok_literal
  144     TypeAnnotationValue -> /* empty */


Terminals, with rules where they appear

$EOI (-1)
error (1)
tok_identifier (2) 7 8 23 24 28 29 30 34 46 55 56 59 63 72 115 142
tok_literal (3) 9 10 33 136 143
tok_int_constant (4) 28 31 104
tok_dub_constant (5) 32
tok_include (6) 10 76
tok_namespace (7) 7 8 73
tok_cpp_include (8) 9 74
tok_cpp_type (9) 75 136
tok_xsd_all (10) 47
tok_xsd_optional (11) 49
tok_xsd_nillable (12) 51
tok_xsd_attrs (13) 53
tok_void (14) 77 114
tok_bool (15) 78 122
tok_string (16) 85 119
tok_binary (17) 86 120
tok_uuid (18) 87 121
tok_byte (19) 79 123
tok_i8 (20) 80 124
tok_i16 (21) 81 125
tok_i32 (22) 82 126
tok_i64 (23) 83 127
tok_double (24) 84 128
tok_map (25) 88 133
tok_list (26) 89 135
tok_set (27) 90 134
tok_oneway (28) 64 91
tok_async (29) 65 92
tok_typedef (30) 23 93
tok_struct (31) 44 94
tok_xception (32) 55 96
tok_throws (33) 67 98
tok_extends (34) 59 97
tok_service (35) 56 99
tok_enum (36) 24 100
tok_const (37) 30 101
tok_required (38) 102 108
tok_optional (39) 103 109
tok_union (40) 45 95
tok_reference (41) 106
'*' (42) 8
',' (43) 20 133
';' (44) 21
'{' (45) 24 41 46 53 55 56
'}' (46) 24 41 46 53 55 56
'=' (47) 28 30 111 143
'[' (48) 37
']' (49) 37
':' (50) 42 104
'(' (51) 63 67 138
')' (52) 63 67 138
'<' (53) 133 134 135
'>' (54) 133 134 135


Nonterminals, with rules where they appear

Program (55)
    on left: 1
CaptureDocText (56)
    on left: 2, on right: 11 27 63 71
DestroyDocText (57)
    on left: 3, on right: 4
HeaderList (58)
    on left: 4 5, on right: 1 4
Header (59)
    on left: 6 7 8 9, on right: 4
Include (60)
    on left: 10, on right: 6
DefinitionList (61)
    on left: 11 12, on right: 1 11
Definition (62)
    on left: 13 14 15, on right: 11
TypeDefinition (63)
    on left: 16 17 18 19, on right: 14
CommaOrSemicolonOptional (64)
    on left: 20 21 22, on right: 23 27 30 39 42 63 71 142
Typedef (65)
    on left: 23, on right: 16
Enum (66)
    on left: 24, on right: 17
EnumDefList (67)
    on left: 25 26, on right: 24 25
EnumDef (68)
    on left: 27, on right: 25
EnumValue (69)
    on left: 28 29, on right: 27
Const (70)
    on left: 30, on right: 13
ConstValue (71)
    on left: 31 32 33 34 35 36, on right: 30 39 42 111
ConstList (72)
    on left: 37 38, on right: 35
ConstListContents (73)
    on left: 39 40, on right: 37 39
ConstMap (74)
    on left: 41, on right: 36
ConstMapContents (75)
    on left: 42 43, on right: 41 42
StructHead (76)
    on left: 44 45, on right: 46
Struct (77)
    on left: 46, on right: 18
XsdAll (78)
    on left: 47 48, on right: 46
XsdOptional (79)
    on left: 49 50, on right: 71
XsdNillable (80)
    on left: 51 52, on right: 71
XsdAttributes (81)
    on left: 53 54, on right: 71
Xception (82)
    on left: 55, on right: 19
Service (83)
    on left: 56, on right: 15
FlagArgs (84)
    on left: 57, on right: 56
UnflagArgs (85)
    on left: 58, on right: 56
Extends (86)
    on left: 59 60, on right: 56
FunctionList (87)
    on left: 61 62, on right: 56 61
Function (88)
    on left: 63, on right: 61
Oneway (89)
    on left: 64 65 66, on right: 63
Throws (90)
    on left: 67 68, on right: 63
FieldList (91)
    on left: 69 70, on right: 46 53 55 63 67 69
Field (92)
    on left: 71, on right: 69
FieldName (93)
    on left: 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103, on right: 71
FieldIdentifier (94)
    on left: 104 105, on right: 71
FieldReference (95)
    on left: 106 107, on right: 71
FieldRequiredness (96)
    on left: 108 109 110, on right: 71
FieldValue (97)
    on left: 111 112, on right: 71
FunctionType (98)
    on left: 113 114, on right: 63
FieldType (99)
    on left: 115 116 117, on right: 23 30 71 113 133 134 135
BaseType (100)
    on left: 118, on right: 116
SimpleBaseType (101)
    on left: 119 120 121 122 123 124 125 126 127 128, on right: 118
ContainerType (102)
    on left: 129, on right: 117
SimpleContainerType (103)
    on left: 130 131 132, on right: 129
MapType (104)
    on left: 133, on right: 130
SetType (105)
    on left: 134, on right: 131
ListType (106)
    on left: 135, on right: 132
CppType (107)
    on left: 136 137, on right: 133 134 135
TypeAnnotations (108)
    on left: 138 139, on right: 7 23 24 27 46 55 56 63 71 118 129
TypeAnnotationList (109)
    on left: 140 141, on right: 138 140
TypeAnnotation (110)
    on left: 142, on right: 140
TypeAnnotationValue (111)
    on left: 143 144, on right: 142


state 0

    $default	reduce using rule 5 (HeaderList)

    Program	go to state 222
    HeaderList	go to state 1



state 1

    Program  ->  HeaderList . DefinitionList   (rule 1)
    HeaderList  ->  HeaderList . DestroyDocText Header   (rule 4)

    tok_include	reduce using rule 3 (DestroyDocText)
    tok_namespace	reduce using rule 3 (DestroyDocText)
    tok_cpp_include	reduce using rule 3 (DestroyDocText)
    $default	reduce using rule 12 (DefinitionList)
    DestroyDocText	go to state 2
    DefinitionList	go to state 3



state 2

    HeaderList  ->  HeaderList DestroyDocText . Header   (rule 4)

    tok_include	shift, and go to state 4
    tok_namespace	shift, and go to state 5
    tok_cpp_include	shift, and go to state 6

    Header	go to state 7
    Include	go to state 8



state 3

    Program  ->  HeaderList DefinitionList .   (rule 1)
    DefinitionList  ->  DefinitionList . CaptureDocText Definition   (rule 11)

    $EOI	reduce using rule 1 (Program)
    $default	reduce using rule 2 (CaptureDocText)
    CaptureDocText	go to state 9



state 4

    Include  ->  tok_include . tok_literal   (rule 10)

    tok_literal	shift, and go to state 10



state 5

    Header  ->  tok_namespace . tok_identifier tok_identifier TypeAnnotations   (rule 7)
    Header  ->  tok_namespace . '*' tok_identifier   (rule 8)

    tok_identifier	shift, and go to state 11
    '*'	shift, and go to state 12



state 6

    Header  ->  tok_cpp_include . tok_literal   (rule 9)

    tok_literal	shift, and go to state 13



state 7

    HeaderList  ->  HeaderList DestroyDocText Header .   (rule 4)

    $default	reduce using rule 4 (HeaderList)



state 8

    Header  ->  Include .   (rule 6)

    $default	reduce using rule 6 (Header)



state 9

    DefinitionList  ->  DefinitionList CaptureDocText . Definition   (rule 11)

    tok_typedef	shift, and go to state 14
    tok_struct	shift, and go to state 15
    tok_xception	shift, and go to state 16
    tok_service	shift, and go to state 17
    tok_enum	shift, and go to state 18
    tok_const	shift, and go to state 19
    tok_union	shift, and go to state 20

    Definition	go to state 21
    TypeDefinition	go to state 22
    Typedef	go to state 23
    Enum	go to state 24
    Const	go to state 25
    StructHead	go to state 26
    Struct	go to state 27
    Xception	go to state 28
    Service	go to state 29



state 10

    Include  ->  tok_include tok_literal .   (rule 10)

    $default	reduce using rule 10 (Include)



state 11

    Header  ->  tok_namespace tok_identifier . tok_identifier TypeAnnotations   (rule 7)

    tok_identifier	shift, and go to state 30



state 12

    Header  ->  tok_namespace '*' . tok_identifier   (rule 8)

    tok_identifier	shift, and go to state 31



state 13

    Header  ->  tok_cpp_include tok_literal .   (rule 9)

    $default	reduce using rule 9 (Header)



state 14

    Typedef  ->  tok_typedef . FieldType tok_identifier TypeAnnotations CommaOrSemicolonOptional   (rule 23)

    tok_identifier	shift, and go to state 32
    tok_bool	shift, and go to state 33
    tok_string	shift, and go to state 34
    tok_binary	shift, and go to state 35
    tok_uuid	shift, and go to state 36
    tok_byte	shift, and go to state 37
    tok_i8	shift, and go to state 38
    tok_i16	shift, and go to state 39
    tok_i32	shift, and go to state 40
    tok_i64	shift, and go to state 41
    tok_double	shift, and go to state 42
    tok_map	shift, and go to state 43
    tok_list	shift, and go to state 44
    tok_set	shift, and go to state 45

    FieldType	go to state 46
    BaseType	go to state 47
    SimpleBaseType	go to state 48
    ContainerType	go to state 49
    SimpleContainerType	go to state 50
    MapType	go to state 51
    SetType	go to state 52
    ListType	go to state 53



state 15

    StructHead  ->  tok_struct .   (rule 44)

    $default	reduce using rule 44 (StructHead)



state 16

    Xception  ->  tok_xception . tok_identifier '{' FieldList '}' TypeAnnotations   (rule 55)

    tok_identifier	shift, and go to state 54



state 17

    Service  ->  tok_service . tok_identifier Extends '{' FlagArgs FunctionList UnflagArgs '}' TypeAnnotations   (rule 56)

    tok_identifier	shift, and go to state 55



state 18

    Enum  ->  tok_enum . tok_identifier '{' EnumDefList '}' TypeAnnotations   (rule 24)

    tok_identifier	shift, and go to state 56



state 19

    Const  ->  tok_const . FieldType tok_identifier '=' ConstValue CommaOrSemicolonOptional   (rule 30)

    tok_identifier	shift, and go to state 32
    tok_bool	shift, and go to state 33
    tok_string	shift, and go to state 34
    tok_binary	shift, and go to state 35
    tok_uuid	shift, and go to state 36
    tok_byte	shift, and go to state 37
    tok_i8	shift, and go to state 38
    tok_i16	shift, and go to state 39
    tok_i32	shift, and go to state 40
    tok_i64	shift, and go to state 41
    tok_double	shift, and go to state 42
    tok_map	shift, and go to state 43
    tok_list	shift, and go to state 44
    tok_set	shift, and go to state 45

    FieldType	go to state 57
    BaseType	go to state 47
    SimpleBaseType	go to state 48
    ContainerType	go to state 49
    SimpleContainerType	go to state 50
    MapType	go to state 51
    SetType	go to state 52
    ListType	go to state 53



state 20

    StructHead  ->  tok_union .   (rule 45)

    $default	reduce using rule 45 (StructHead)



state 21

    DefinitionList  ->  DefinitionList CaptureDocText Definition .   (rule 11)

    $default	reduce using rule 11 (DefinitionList)



state 22

    Definition  ->  TypeDefinition .   (rule 14)

    $default	reduce using rule 14 (Definition)



state 23

    TypeDefinition  ->  Typedef .   (rule 16)

    $default	reduce using rule 16 (TypeDefinition)



state 24

    TypeDefinition  ->  Enum .   (rule 17)

    $default	reduce using rule 17 (TypeDefinition)



state 25

    Definition  ->  Const .   (rule 13)

    $default	reduce using rule 13 (Definition)



state 26

    Struct  ->  StructHead . tok_identifier XsdAll '{' FieldList '}' TypeAnnotations   (rule 46)

    tok_identifier	shift, and go to state 58



state 27

    TypeDefinition  ->  Struct .   (rule 18)

    $default	reduce using rule 18 (TypeDefinition)



state 28

    TypeDefinition  ->  Xception .   (rule 19)

    $default	reduce using rule 19 (TypeDefinition)



state 29

    Definition  ->  Service .   (rule 15)

    $default	reduce using rule 15 (Definition)



state 30

    Header  ->  tok_namespace tok_identifier tok_identifier . TypeAnnotations   (rule 7)

    '('	shift, and go to state 59

    $default	reduce using rule 139 (TypeAnnotations)

    TypeAnnotations	go to state 60



state 31

    Header  ->  tok_namespace '*' tok_identifier .   (rule 8)

    $default	reduce using rule 8 (Header)



state 32

    FieldType  ->  tok_identifier .   (rule 115)

    $default	reduce using rule 115 (FieldType)



state 33

    SimpleBaseType  ->  tok_bool .   (rule 122)

    $default	reduce using rule 122 (SimpleBaseType)



state 34

    SimpleBaseType  ->  tok_string .   (rule 119)

    $default	reduce using rule 119 (SimpleBaseType)



state 35

    SimpleBaseType  ->  tok_binary .   (rule 120)

    $default	reduce using rule 120 (SimpleBaseType)



state 36

    SimpleBaseType  ->  tok_uuid .   (rule 121)

    $default	reduce using rule 121 (SimpleBaseType)



state 37

    SimpleBaseType  ->  tok_byte .   (rule 123)

    $default	reduce using rule 123 (SimpleBaseType)



state 38

    SimpleBaseType  ->  tok_i8 .   (rule 124)

    $default	reduce using rule 124 (SimpleBaseType)



state 39

    SimpleBaseType  ->  tok_i16 .   (rule 125)

    $default	reduce using rule 125 (SimpleBaseType)



state 40

    SimpleBaseType  ->  tok_i32 .   (rule 126)

    $default	reduce using rule 126 (SimpleBaseType)



state 41

    SimpleBaseType  ->  tok_i64 .   (rule 127)

    $default	reduce using rule 127 (SimpleBaseType)



state 42

    SimpleBaseType  ->  tok_double .   (rule 128)

    $default	reduce using rule 128 (SimpleBaseType)



state 43

    MapType  ->  tok_map . CppType '<' FieldType ',' FieldType '>'   (rule 133)

    tok_cpp_type	shift, and go to state 61

    $default	reduce using rule 137 (CppType)

    CppType	go to state 62



state 44

    ListType  ->  tok_list . CppType '<' FieldType '>'   (rule 135)

    tok_cpp_type	shift, and go to state 61

    $default	reduce using rule 137 (CppType)

    CppType	go to state 63



state 45

    SetType  ->  tok_set . CppType '<' FieldType '>'   (rule 134)

    tok_cpp_type	shift, and go to state 61

    $default	reduce using rule 137 (CppType)

    CppType	go to state 64



state 46

    Typedef  ->  tok_typedef FieldType . tok_identifier TypeAnnotations CommaOrSemicolonOptional   (rule 23)

    tok_identifier	shift, and go to state 65



state 47

    FieldType  ->  BaseType .   (rule 116)

    $default	reduce using rule 116 (FieldType)



state 48

    BaseType  ->  SimpleBaseType . TypeAnnotations   (rule 118)

    '('	shift, and go to state 59

    $default	reduce using rule 139 (TypeAnnotations)

    TypeAnnotations	go to state 66



state 49

    FieldType  ->  ContainerType .   (rule 117)

    $default	reduce using rule 117 (FieldType)



state 50

    ContainerType  ->  SimpleContainerType . TypeAnnotations   (rule 129)

    '('	shift, and go to state 59

    $default	reduce using rule 139 (TypeAnnotations)

    TypeAnnotations	go to state 67



state 51

    SimpleContainerType  ->  MapType .   (rule 130)

    $default	reduce using rule 130 (SimpleContainerType)



state 52

    SimpleContainerType  ->  SetType .   (rule 131)

    $default	reduce using rule 131 (SimpleContainerType)



state 53

    SimpleContainerType  ->  ListType .   (rule 132)

    $default	reduce using rule 132 (SimpleContainerType)



state 54

    Xception  ->  tok_xception tok_identifier . '{' FieldList '}' TypeAnnotations   (rule 55)

    '{'	shift, and go to state 68



state 55

    Service  ->  tok_service tok_identifier . Extends '{' FlagArgs FunctionList UnflagArgs '}' TypeAnnotations   (rule 56)

    tok_extends	shift, and go to state 69

    $default	reduce using rule 60 (Extends)

    Extends	go to state 70



state 56

    Enum  ->  tok_enum tok_identifier . '{' EnumDefList '}' TypeAnnotations   (rule 24)

    '{'	shift, and go to state 71



state 57

    Const  ->  tok_const FieldType . tok_identifier '=' ConstValue CommaOrSemicolonOptional   (rule 30)

    tok_identifier	shift, and go to state 72



state 58

    Struct  ->  StructHead tok_identifier . XsdAll '{' FieldList '}' TypeAnnotations   (rule 46)

    tok_xsd_all	shift, and go to state 73

    $default	reduce using rule 48 (XsdAll)

    XsdAll	go to state 74



state 59

    TypeAnnotations  ->  '(' . TypeAnnotationList ')'   (rule 138)

    $default	reduce using rule 141 (TypeAnnotationList)

    TypeAnnotationList	go to state 75



state 60

    Header  ->  tok_namespace tok_identifier tok_identifier TypeAnnotations .   (rule 7)

    $default	reduce using rule 7 (Header)



state 61

    CppType  ->  tok_cpp_type . tok_literal   (rule 136)

    tok_literal	shift, and go to state 76



state 62

    MapType  ->  tok_map CppType . '<' FieldType ',' FieldType '>'   (rule 133)

    '<'	shift, and go to state 77



state 63

    ListType  ->  tok_list CppType . '<' FieldType '>'   (rule 135)

    '<'	shift, and go to state 78



state 64

    SetType  ->  tok_set CppType . '<' FieldType '>'   (rule 134)

    '<'	shift, and go to state 79



state 65

    Typedef  ->  tok_typedef FieldType tok_identifier . TypeAnnotations CommaOrSemicolonOptional   (rule 23)

    '('	shift, and go to state 59

    $default	reduce using rule 139 (TypeAnnotations)

    TypeAnnotations	go to state 80



state 66

    BaseType  ->  SimpleBaseType TypeAnnotations .   (rule 118)

    $default	reduce using rule 118 (BaseType)



state 67

    ContainerType  ->  SimpleContainerType TypeAnnotations .   (rule 129)

    $default	reduce using rule 129 (ContainerType)



state 68

    Xception  ->  tok_xception tok_identifier '{' . FieldList '}' TypeAnnotations   (rule 55)

    $default	reduce using rule 70 (FieldList)

    FieldList	go to state 81



state 69

    Extends  ->  tok_extends . tok_identifier   (rule 59)

    tok_identifier	shift, and go to state 82



state 70

    Service  ->  tok_service tok_identifier Extends . '{' FlagArgs FunctionList UnflagArgs '}' TypeAnnotations   (rule 56)

    '{'	shift, and go to state 83



state 71

    Enum  ->  tok_enum tok_identifier '{' . EnumDefList '}' TypeAnnotations   (rule 24)

    $default	reduce using rule 26 (EnumDefList)

    EnumDefList	go to state 84



state 72

    Const  ->  tok_const FieldType tok_identifier . '=' ConstValue CommaOrSemicolonOptional   (rule 30)

    '='	shift, and go to state 85



state 73

    XsdAll  ->  tok_xsd_all .   (rule 47)

    $default	reduce using rule 47 (XsdAll)



state 74

    Struct  ->  StructHead tok_identifier XsdAll . '{' FieldList '}' TypeAnnotations   (rule 46)

    '{'	shift, and go to state 86



state 75

    TypeAnnotations  ->  '(' TypeAnnotationList . ')'   (rule 138)
    TypeAnnotationList  ->  TypeAnnotationList . TypeAnnotation   (rule 140)

    tok_identifier	shift, and go to state 87
    ')'	shift, and go to state 88

    TypeAnnotation	go to state 89



state 76

    CppType  ->  tok_cpp_type tok_literal .   (rule 136)

    $default	reduce using rule 136 (CppType)



state 77

    MapType  ->  tok_map CppType '<' . FieldType ',' FieldType '>'   (rule 133)

    tok_identifier	shift, and go to state 32
    tok_bool	shift, and go to state 33
    tok_string	shift, and go to state 34
    tok_binary	shift, and go to state 35
    tok_uuid	shift, and go to state 36
    tok_byte	shift, and go to state 37
    tok_i8	shift, and go to state 38
    tok_i16	shift, and go to state 39
    tok_i32	shift, and go to state 40
    tok_i64	shift, and go to state 41
    tok_double	shift, and go to state 42
    tok_map	shift, and go to state 43
    tok_list	shift, and go to state 44
    tok_set	shift, and go to state 45

    FieldType	go to state 90
    BaseType	go to state 47
    SimpleBaseType	go to state 48
    ContainerType	go to state 49
    SimpleContainerType	go to state 50
    MapType	go to state 51
    SetType	go to state 52
    ListType	go to state 53



state 78

    ListType  ->  tok_list CppType '<' . FieldType '>'   (rule 135)

    tok_identifier	shift, and go to state 32
    tok_bool	shift, and go to state 33
    tok_string	shift, and go to state 34
    tok_binary	shift, and go to state 35
    tok_uuid	shift, and go to state 36
    tok_byte	shift, and go to state 37
    tok_i8	shift, and go to state 38
    tok_i16	shift, and go to state 39
    tok_i32	shift, and go to state 40
    tok_i64	shift, and go to state 41
    tok_double	shift, and go to state 42
    tok_map	shift, and go to state 43
    tok_list	shift, and go to state 44
    tok_set	shift, and go to state 45

    FieldType	go to state 91
    BaseType	go to state 47
    SimpleBaseType	go to state 48
    ContainerType	go to state 49
    SimpleContainerType	go to state 50
    MapType	go to state 51
    SetType	go to state 52
    ListType	go to state 53



state 79

    SetType  ->  tok_set CppType '<' . FieldType '>'   (rule 134)

    tok_identifier	shift, and go to state 32
    tok_bool	shift, and go to state 33
    tok_string	shift, and go to state 34
    tok_binary	shift, and go to state 35
    tok_uuid	shift, and go to state 36
    tok_byte	shift, and go to state 37
    tok_i8	shift, and go to state 38
    tok_i16	shift, and go to state 39
    tok_i32	shift, and go to state 40
    tok_i64	shift, and go to state 41
    tok_double	shift, and go to state 42
    tok_map	shift, and go to state 43
    tok_list	shift, and go to state 44
    tok_set	shift, and go to state 45

    FieldType	go to state 92
    BaseType	go to state 47
    SimpleBaseType	go to state 48
    ContainerType	go to state 49
    SimpleContainerType	go to state 50
    MapType	go to state 51
    SetType	go to state 52
    ListType	go to state 53



state 80

    Typedef  ->  tok_typedef FieldType tok_identifier TypeAnnotations . CommaOrSemicolonOptional   (rule 23)

    ','	shift, and go to state 93
    ';'	shift, and go to state 94

    $default	reduce using rule 22 (CommaOrSemicolonOptional)

    CommaOrSemicolonOptional	go to state 95



state 81

    Xception  ->  tok_xception tok_identifier '{' FieldList . '}' TypeAnnotations   (rule 55)
    FieldList  ->  FieldList . Field   (rule 69)

    '}'	shift, and go to state 96

    $default	reduce using rule 2 (CaptureDocText)

    CaptureDocText	go to state 97
    Field	go to state 98



state 82

    Extends  ->  tok_extends tok_identifier .   (rule 59)

    $default	reduce using rule 59 (Extends)



state 83

    Service  ->  tok_service tok_identifier Extends '{' . FlagArgs FunctionList UnflagArgs '}' TypeAnnotations   (rule 56)

    $default	reduce using rule 57 (FlagArgs)

    FlagArgs	go to state 99



state 84

    Enum  ->  tok_enum tok_identifier '{' EnumDefList . '}' TypeAnnotations   (rule 24)
    EnumDefList  ->  EnumDefList . EnumDef   (rule 25)

    '}'	shift, and go to state 100

    $default	reduce using rule 2 (CaptureDocText)

    CaptureDocText	go to state 101
    EnumDef	go to state 102



state 85

    Const  ->  tok_const FieldType tok_identifier '=' . ConstValue CommaOrSemicolonOptional   (rule 30)

    tok_identifier	shift, and go to state 103
    tok_literal	shift, and go to state 104
    tok_int_constant	shift, and go to state 105
    tok_dub_constant	shift, and go to state 106
    '{'	shift, and go to state 107
    '['	shift, and go to state 108

    $default	reduce using rule 38 (ConstList)

    ConstValue	go to state 109
    ConstList	go to state 110
    ConstMap	go to state 111



state 86

    Struct  ->  StructHead tok_identifier XsdAll '{' . FieldList '}' TypeAnnotations   (rule 46)

    $default	reduce using rule 70 (FieldList)

    FieldList	go to state 112



state 87

    TypeAnnotation  ->  tok_identifier . TypeAnnotationValue CommaOrSemicolonOptional   (rule 142)

    '='	shift, and go to state 113

    $default	reduce using rule 144 (TypeAnnotationValue)

    TypeAnnotationValue	go to state 114



state 88

    TypeAnnotations  ->  '(' TypeAnnotationList ')' .   (rule 138)

    $default	reduce using rule 138 (TypeAnnotations)



state 89

    TypeAnnotationList  ->  TypeAnnotationList TypeAnnotation .   (rule 140)

    $default	reduce using rule 140 (TypeAnnotationList)



state 90

    MapType  ->  tok_map CppType '<' FieldType . ',' FieldType '>'   (rule 133)

    ','	shift, and go to state 115



state 91

    ListType  ->  tok_list CppType '<' FieldType . '>'   (rule 135)

    '>'	shift, and go to state 116



state 92

    SetType  ->  tok_set CppType '<' FieldType . '>'   (rule 134)

    '>'	shift, and go to state 117



state 93

    CommaOrSemicolonOptional  ->  ',' .   (rule 20)

    $default	reduce using rule 20 (CommaOrSemicolonOptional)



state 94

    CommaOrSemicolonOptional  ->  ';' .   (rule 21)

    $default	reduce using rule 21 (CommaOrSemicolonOptional)



state 95

    Typedef  ->  tok_typedef FieldType tok_identifier TypeAnnotations CommaOrSemicolonOptional .   (rule 23)

    $default	reduce using rule 23 (Typedef)



state 96

    Xception  ->  tok_xception tok_identifier '{' FieldList '}' . TypeAnnotations   (rule 55)

    '('	shift, and go to state 59

    $default	reduce using rule 139 (TypeAnnotations)

    TypeAnnotations	go to state 118



state 97

    Field  ->  CaptureDocText . FieldIdentifier FieldRequiredness FieldType FieldReference FieldName FieldValue XsdOptional XsdNillable XsdAttributes TypeAnnotations CommaOrSemicolonOptional   (rule 71)

    tok_int_constant	shift, and go to state 119

    $default	reduce using rule 105 (FieldIdentifier)

    FieldIdentifier	go to state 120



state 98

    FieldList  ->  FieldList Field .   (rule 69)

    $default	reduce using rule 69 (FieldList)



state 99

    Service  ->  tok_service tok_identifier Extends '{' FlagArgs . FunctionList UnflagArgs '}' TypeAnnotations   (rule 56)

    $default	reduce using rule 62 (FunctionList)

    FunctionList	go to state 121



state 100

    Enum  ->  tok_enum tok_identifier '{' EnumDefList '}' . TypeAnnotations   (rule 24)

    '('	shift, and go to state 59

    $default	reduce using rule 139 (TypeAnnotations)

    TypeAnnotations	go to state 122



state 101

    EnumDef  ->  CaptureDocText . EnumValue TypeAnnotations CommaOrSemicolonOptional   (rule 27)

    tok_identifier	shift, and go to state 123

    EnumValue	go to state 124



state 102

    EnumDefList  ->  EnumDefList EnumDef .   (rule 25)

    $default	reduce using rule 25 (EnumDefList)



state 103

    ConstValue  ->  tok_identifier .   (rule 34)

    $default	reduce using rule 34 (ConstValue)



state 104

    ConstValue  ->  tok_literal .   (rule 33)

    $default	reduce using rule 33 (ConstValue)



state 105

    ConstValue  ->  tok_int_constant .   (rule 31)

    $default	reduce using rule 31 (ConstValue)



state 106

    ConstValue  ->  tok_dub_constant .   (rule 32)

    $default	reduce using rule 32 (ConstValue)



state 107

    ConstMap  ->  '{' . ConstMapContents '}'   (rule 41)

    $default	reduce using rule 43 (ConstMapContents)

    ConstMapContents	go to state 125



state 108

    ConstList  ->  '[' . ConstListContents ']'   (rule 37)

    $default	reduce using rule 40 (ConstListContents)

    ConstListContents	go to state 126



state 109

    Const  ->  tok_const FieldType tok_identifier '=' ConstValue . CommaOrSemicolonOptional   (rule 30)

    ','	shift, and go to state 93
    ';'	shift, and go to state 94

    $default	reduce using rule 22 (CommaOrSemicolonOptional)

    CommaOrSemicolonOptional	go to state 127



state 110

    ConstValue  ->  ConstList .   (rule 35)

    $default	reduce using rule 35 (ConstValue)



state 111

    ConstValue  ->  ConstMap .   (rule 36)

    $default	reduce using rule 36 (ConstValue)



state 112

    Struct  ->  StructHead tok_identifier XsdAll '{' FieldList . '}' TypeAnnotations   (rule 46)
    FieldList  ->  FieldList . Field   (rule 69)

    '}'	shift, and go to state 128

    $default	reduce using rule 2 (CaptureDocText)

    CaptureDocText	go to state 97
    Field	go to state 98



state 113

    TypeAnnotationValue  ->  '=' . tok_literal   (rule 143)

    tok_literal	shift, and go to state 129



state 114

    TypeAnnotation  ->  tok_identifier TypeAnnotationValue . CommaOrSemicolonOptional   (rule 142)

    ','	shift, and go to state 93
    ';'	shift, and go to state 94

    $default	reduce using rule 22 (CommaOrSemicolonOptional)

    CommaOrSemicolonOptional	go to state 130



state 115

    MapType  ->  tok_map CppType '<' FieldType ',' . FieldType '>'   (rule 133)

    tok_identifier	shift, and go to state 32
    tok_bool	shift, and go to state 33
    tok_string	shift, and go to state 34
    tok_binary	shift, and go to state 35
    tok_uuid	shift, and go to state 36
    tok_byte	shift, and go to state 37
    tok_i8	shift, and go to state 38
    tok_i16	shift, and go to state 39
    tok_i32	shift, and go to state 40
    tok_i64	shift, and go to state 41
    tok_double	shift, and go to state 42
    tok_map	shift, and go to state 43
    tok_list	shift, and go to state 44
    tok_set	shift, and go to state 45

    FieldType	go to state 131
    BaseType	go to state 47
    SimpleBaseType	go to state 48
    ContainerType	go to state 49
    SimpleContainerType	go to state 50
    MapType	go to state 51
    SetType	go to state 52
    ListType	go to state 53



state 116

    ListType  ->  tok_list CppType '<' FieldType '>' .   (rule 135)

    $default	reduce using rule 135 (ListType)



state 117

    SetType  ->  tok_set CppType '<' FieldType '>' .   (rule 134)

    $default	reduce using rule 134 (SetType)



state 118

    Xception  ->  tok_xception tok_identifier '{' FieldList '}' TypeAnnotations .   (rule 55)

    $default	reduce using rule 55 (Xception)



state 119

    FieldIdentifier  ->  tok_int_constant . ':'   (rule 104)

    ':'	shift, and go to state 132



state 120

    Field  ->  CaptureDocText FieldIdentifier . FieldRequiredness FieldType FieldReference FieldName FieldValue XsdOptional XsdNillable XsdAttributes TypeAnnotations CommaOrSemicolonOptional   (rule 71)

    tok_required	shift, and go to state 133
    tok_optional	shift, and go to state 134

    $default	reduce using rule 110 (FieldRequiredness)

    FieldRequiredness	go to state 135



state 121

    Service  ->  tok_service tok_identifier Extends '{' FlagArgs FunctionList . UnflagArgs '}' TypeAnnotations   (rule 56)
    FunctionList  ->  FunctionList . Function   (rule 61)

    '}'	reduce using rule 58 (UnflagArgs)
    $default	reduce using rule 2 (CaptureDocText)
    CaptureDocText	go to state 136
    UnflagArgs	go to state 137
    Function	go to state 138



state 122

    Enum  ->  tok_enum tok_identifier '{' EnumDefList '}' TypeAnnotations .   (rule 24)

    $default	reduce using rule 24 (Enum)



state 123

    EnumValue  ->  tok_identifier . '=' tok_int_constant   (rule 28)
    EnumValue  ->  tok_identifier .   (rule 29)

    '='	shift, and go to state 139

    $default	reduce using rule 29 (EnumValue)



state 124

    EnumDef  ->  CaptureDocText EnumValue . TypeAnnotations CommaOrSemicolonOptional   (rule 27)

    '('	shift, and go to state 59

    $default	reduce using rule 139 (TypeAnnotations)

    TypeAnnotations	go to state 140



state 125

    ConstMap  ->  '{' ConstMapContents . '}'   (rule 41)
    ConstMapContents  ->  ConstMapContents . ConstValue ':' ConstValue CommaOrSemicolonOptional   (rule 42)

    tok_identifier	shift, and go to state 103
    tok_literal	shift, and go to state 104
    tok_int_constant	shift, and go to state 105
    tok_dub_constant	shift, and go to state 106
    '{'	shift, and go to state 107
    '}'	shift, and go to state 141
    '['	shift, and go to state 108

    $default	reduce using rule 38 (ConstList)

    ConstValue	go to state 142
    ConstList	go to state 110
    ConstMap	go to state 111



state 126

    ConstList  ->  '[' ConstListContents . ']'   (rule 37)
    ConstListContents  ->  ConstListContents . ConstValue CommaOrSemicolonOptional   (rule 39)

    tok_identifier	shift, and go to state 103
    tok_literal	shift, and go to state 104
    tok_int_constant	shift, and go to state 105
    tok_dub_constant	shift, and go to state 106
    '{'	shift, and go to state 107
    '['	shift, and go to state 108
    ']'	shift, and go to state 143

    tok_identifier	[reduce using rule 38 (ConstList)]
    tok_literal	[reduce using rule 38 (ConstList)]
    tok_int_constant	[reduce using rule 38 (ConstList)]
    tok_dub_constant	[reduce using rule 38 (ConstList)]
    '{'	[reduce using rule 38 (ConstList)]
    '['	[reduce using rule 38 (ConstList)]
    ']'	[reduce using rule 38 (ConstList)]
    $default	reduce using rule 38 (ConstList)

    ConstValue	go to state 144
    ConstList	go to state 110
    ConstMap	go to state 111



state 127

    Const  ->  tok_const FieldType tok_identifier '=' ConstValue CommaOrSemicolonOptional .   (rule 30)

    $default	reduce using rule 30 (Const)



state 128

    Struct  ->  StructHead tok_identifier XsdAll '{' FieldList '}' . TypeAnnotations   (rule 46)

    '('	shift, and go to state 59

    $default	reduce using rule 139 (TypeAnnotations)

    TypeAnnotations	go to state 145



state 129

    TypeAnnotationValue  ->  '=' tok_literal .   (rule 143)

    $default	reduce using rule 143 (TypeAnnotationValue)



state 130

    TypeAnnotation  ->  tok_identifier TypeAnnotationValue CommaOrSemicolonOptional .   (rule 142)

    $default	reduce using rule 142 (TypeAnnotation)



state 131

    MapType  ->  tok_map CppType '<' FieldType ',' FieldType . '>'   (rule 133)

    '>'	shift, and go to state 146



state 132

    FieldIdentifier  ->  tok_int_constant ':' .   (rule 104)

    $default	reduce using rule 104 (FieldIdentifier)



state 133

    FieldRequiredness  ->  tok_required .   (rule 108)

    $default	reduce using rule 108 (FieldRequiredness)



state 134

    FieldRequiredness  ->  tok_optional .   (rule 109)

    $default	reduce using rule 109 (FieldRequiredness)



state 135

    Field  ->  CaptureDocText FieldIdentifier FieldRequiredness . FieldType FieldReference FieldName FieldValue XsdOptional XsdNillable XsdAttributes TypeAnnotations CommaOrSemicolonOptional   (rule 71)

    tok_identifier	shift, and go to state 32
    tok_bool	shift, and go to state 33
    tok_string	shift, and go to state 34
    tok_binary	shift, and go to state 35
    tok_uuid	shift, and go to state 36
    tok_byte	shift, and go to state 37
    tok_i8	shift, and go to state 38
    tok_i16	shift, and go to state 39
    tok_i32	shift, and go to state 40
    tok_i64	shift, and go to state 41
    tok_double	shift, and go to state 42
    tok_map	shift, and go to state 43
    tok_list	shift, and go to state 44
    tok_set	shift, and go to state 45

    FieldType	go to state 147
    BaseType	go to state 47
    SimpleBaseType	go to state 48
    ContainerType	go to state 49
    SimpleContainerType	go to state 50
    MapType	go to state 51
    SetType	go to state 52
    ListType	go to state 53



state 136

    Function  ->  CaptureDocText . Oneway FunctionType tok_identifier '(' FieldList ')' Throws TypeAnnotations CommaOrSemicolonOptional   (rule 63)

    tok_oneway	shift, and go to state 148
    tok_async	shift, and go to state 149

    $default	reduce using rule 66 (Oneway)

    Oneway	go to state 150



state 137

    Service  ->  tok_service tok_identifier Extends '{' FlagArgs FunctionList UnflagArgs . '}' TypeAnnotations   (rule 56)

    '}'	shift, and go to state 151



state 138

    FunctionList  ->  FunctionList Function .   (rule 61)

    $default	reduce using rule 61 (FunctionList)



state 139

    EnumValue  ->  tok_identifier '=' . tok_int_constant   (rule 28)

    tok_int_constant	shift, and go to state 152



state 140

    EnumDef  ->  CaptureDocText EnumValue TypeAnnotations . CommaOrSemicolonOptional   (rule 27)

    ','	shift, and go to state 93
    ';'	shift, and go to state 94

    $default	reduce using rule 22 (CommaOrSemicolonOptional)

    CommaOrSemicolonOptional	go to state 153



state 141

    ConstMap  ->  '{' ConstMapContents '}' .   (rule 41)

    $default	reduce using rule 41 (ConstMap)



state 142

    ConstMapContents  ->  ConstMapContents ConstValue . ':' ConstValue CommaOrSemicolonOptional   (rule 42)

    ':'	shift, and go to state 154



state 143

    ConstList  ->  '[' ConstListContents ']' .   (rule 37)

    $default	reduce using rule 37 (ConstList)



state 144

    ConstListContents  ->  ConstListContents ConstValue . CommaOrSemicolonOptional   (rule 39)

    ','	shift, and go to state 93
    ';'	shift, and go to state 94

    ','	[reduce using rule 22 (CommaOrSemicolonOptional)]
    ';'	[reduce using rule 22 (CommaOrSemicolonOptional)]
    $default	reduce using rule 22 (CommaOrSemicolonOptional)

    CommaOrSemicolonOptional	go to state 155



state 145

    Struct  ->  StructHead tok_identifier XsdAll '{' FieldList '}' TypeAnnotations .   (rule 46)

    $default	reduce using rule 46 (Struct)



state 146

    MapType  ->  tok_map CppType '<' FieldType ',' FieldType '>' .   (rule 133)

    $default	reduce using rule 133 (MapType)



state 147

    Field  ->  CaptureDocText FieldIdentifier FieldRequiredness FieldType . FieldReference FieldName FieldValue XsdOptional XsdNillable XsdAttributes TypeAnnotations CommaOrSemicolonOptional   (rule 71)

    tok_reference	shift, and go to state 156

    $default	reduce using rule 107 (FieldReference)

    FieldReference	go to state 157



state 148

    Oneway  ->  tok_oneway .   (rule 64)

    $default	reduce using rule 64 (Oneway)



state 149

    Oneway  ->  tok_async .   (rule 65)

    $default	reduce using rule 65 (Oneway)



state 150

    Function  ->  CaptureDocText Oneway . FunctionType tok_identifier '(' FieldList ')' Throws TypeAnnotations CommaOrSemicolonOptional   (rule 63)

    tok_identifier	shift, and go to state 32
    tok_void	shift, and go to state 158
    tok_bool	shift, and go to state 33
    tok_string	shift, and go to state 34
    tok_binary	shift, and go to state 35
    tok_uuid	shift, and go to state 36
    tok_byte	shift, and go to state 37
    tok_i8	shift, and go to state 38
    tok_i16	shift, and go to state 39
    tok_i32	shift, and go to state 40
    tok_i64	shift, and go to state 41
    tok_double	shift, and go to state 42
    tok_map	shift, and go to state 43
    tok_list	shift, and go to state 44
    tok_set	shift, and go to state 45

    FunctionType	go to state 159
    FieldType	go to state 160
    BaseType	go to state 47
    SimpleBaseType	go to state 48
    ContainerType	go to state 49
    SimpleContainerType	go to state 50
    MapType	go to state 51
    SetType	go to state 52
    ListType	go to state 53



state 151

    Service  ->  tok_service tok_identifier Extends '{' FlagArgs FunctionList UnflagArgs '}' . TypeAnnotations   (rule 56)

    '('	shift, and go to state 59

    $default	reduce using rule 139 (TypeAnnotations)

    TypeAnnotations	go to state 161



state 152

    EnumValue  ->  tok_identifier '=' tok_int_constant .   (rule 28)

    $default	reduce using rule 28 (EnumValue)



state 153

    EnumDef  ->  CaptureDocText EnumValue TypeAnnotations CommaOrSemicolonOptional .   (rule 27)

    $default	reduce using rule 27 (EnumDef)



state 154

    ConstMapContents  ->  ConstMapContents ConstValue ':' . ConstValue CommaOrSemicolonOptional   (rule 42)

    tok_identifier	shift, and go to state 103
    tok_literal	shift, and go to state 104
    tok_int_constant	shift, and go to state 105
    tok_dub_constant	shift, and go to state 106
    '{'	shift, and go to state 107
    '['	shift, and go to state 108

    tok_identifier	[reduce using rule 38 (ConstList)]
    tok_literal	[reduce using rule 38 (ConstList)]
    tok_int_constant	[reduce using rule 38 (ConstList)]
    tok_dub_constant	[reduce using rule 38 (ConstList)]
    '{'	[reduce using rule 38 (ConstList)]
    '['	[reduce using rule 38 (ConstList)]
    $default	reduce using rule 38 (ConstList)

    ConstValue	go to state 162
    ConstList	go to state 110
    ConstMap	go to state 111



state 155

    ConstListContents  ->  ConstListContents ConstValue CommaOrSemicolonOptional .   (rule 39)

    $default	reduce using rule 39 (ConstListContents)



state 156

    FieldReference  ->  tok_reference .   (rule 106)

    $default	reduce using rule 106 (FieldReference)



state 157

    Field  ->  CaptureDocText FieldIdentifier FieldRequiredness FieldType FieldReference . FieldName FieldValue XsdOptional XsdNillable XsdAttributes TypeAnnotations CommaOrSemicolonOptional   (rule 71)

    tok_identifier	shift, and go to state 163
    tok_include	shift, and go to state 164
    tok_namespace	shift, and go to state 165
    tok_cpp_include	shift, and go to state 166
    tok_cpp_type	shift, and go to state 167
    tok_void	shift, and go to state 168
    tok_bool	shift, and go to state 169
    tok_string	shift, and go to state 170
    tok_binary	shift, and go to state 171
    tok_uuid	shift, and go to state 172
    tok_byte	shift, and go to state 173
    tok_i8	shift, and go to state 174
    tok_i16	shift, and go to state 175
    tok_i32	shift, and go to state 176
    tok_i64	shift, and go to state 177
    tok_double	shift, and go to state 178
    tok_map	shift, and go to state 179
    tok_list	shift, and go to state 180
    tok_set	shift, and go to state 181
    tok_oneway	shift, and go to state 182
    tok_async	shift, and go to state 183
    tok_typedef	shift, and go to state 184
    tok_struct	shift, and go to state 185
    tok_xception	shift, and go to state 186
    tok_throws	shift, and go to state 187
    tok_extends	shift, and go to state 188
    tok_service	shift, and go to state 189
    tok_enum	shift, and go to state 190
    tok_const	shift, and go to state 191
    tok_required	shift, and go to state 192
    tok_optional	shift, and go to state 193
    tok_union	shift, and go to state 194

    FieldName	go to state 195



state 158

    FunctionType  ->  tok_void .   (rule 114)

    $default	reduce using rule 114 (FunctionType)



state 159

    Function  ->  CaptureDocText Oneway FunctionType . tok_identifier '(' FieldList ')' Throws TypeAnnotations CommaOrSemicolonOptional   (rule 63)

    tok_identifier	shift, and go to state 196



state 160

    FunctionType  ->  FieldType .   (rule 113)

    $default	reduce using rule 113 (FunctionType)



state 161

    Service  ->  tok_service tok_identifier Extends '{' FlagArgs FunctionList UnflagArgs '}' TypeAnnotations .   (rule 56)

    $default	reduce using rule 56 (Service)



state 162

    ConstMapContents  ->  ConstMapContents ConstValue ':' ConstValue . CommaOrSemicolonOptional   (rule 42)

    ','	shift, and go to state 93
    ';'	shift, and go to state 94

    $default	reduce using rule 22 (CommaOrSemicolonOptional)

    CommaOrSemicolonOptional	go to state 197



state 163

    FieldName  ->  tok_identifier .   (rule 72)

    $default	reduce using rule 72 (FieldName)



state 164

    FieldName  ->  tok_include .   (rule 76)

    $default	reduce using rule 76 (FieldName)



state 165

    FieldName  ->  tok_namespace .   (rule 73)

    $default	reduce using rule 73 (FieldName)



state 166

    FieldName  ->  tok_cpp_include .   (rule 74)

    $default	reduce using rule 74 (FieldName)



state 167

    FieldName  ->  tok_cpp_type .   (rule 75)

    $default	reduce using rule 75 (FieldName)



state 168

    FieldName  ->  tok_void .   (rule 77)

    $default	reduce using rule 77 (FieldName)



state 169

    FieldName  ->  tok_bool .   (rule 78)

    $default	reduce using rule 78 (FieldName)



state 170

    FieldName  ->  tok_string .   (rule 85)

    $default	reduce using rule 85 (FieldName)



state 171

    FieldName  ->  tok_binary .   (rule 86)

    $default	reduce using rule 86 (FieldName)



state 172

    FieldName  ->  tok_uuid .   (rule 87)

    $default	reduce using rule 87 (FieldName)



state 173

    FieldName  ->  tok_byte .   (rule 79)

    $default	reduce using rule 79 (FieldName)



state 174

    FieldName  ->  tok_i8 .   (rule 80)

    $default	reduce using rule 80 (FieldName)



state 175

    FieldName  ->  tok_i16 .   (rule 81)

    $default	reduce using rule 81 (FieldName)



state 176

    FieldName  ->  tok_i32 .   (rule 82)

    $default	reduce using rule 82 (FieldName)



state 177

    FieldName  ->  tok_i64 .   (rule 83)

    $default	reduce using rule 83 (FieldName)



state 178

    FieldName  ->  tok_double .   (rule 84)

    $default	reduce using rule 84 (FieldName)



state 179

    FieldName  ->  tok_map .   (rule 88)

    $default	reduce using rule 88 (FieldName)



state 180

    FieldName  ->  tok_list .   (rule 89)

    $default	reduce using rule 89 (FieldName)



state 181

    FieldName  ->  tok_set .   (rule 90)

    $default	reduce using rule 90 (FieldName)



state 182

    FieldName  ->  tok_oneway .   (rule 91)

    $default	reduce using rule 91 (FieldName)



state 183

    FieldName  ->  tok_async .   (rule 92)

    $default	reduce using rule 92 (FieldName)



state 184

    FieldName  ->  tok_typedef .   (rule 93)

    $default	reduce using rule 93 (FieldName)



state 185

    FieldName  ->  tok_struct .   (rule 94)

    $default	reduce using rule 94 (FieldName)



state 186

    FieldName  ->  tok_xception .   (rule 96)

    $default	reduce using rule 96 (FieldName)



state 187

    FieldName  ->  tok_throws .   (rule 98)

    $default	reduce using rule 98 (FieldName)



state 188

    FieldName  ->  tok_extends .   (rule 97)

    $default	reduce using rule 97 (FieldName)



state 189

    FieldName  ->  tok_service .   (rule 99)

    $default	reduce using rule 99 (FieldName)



state 190

    FieldName  ->  tok_enum .   (rule 100)

    $default	reduce using rule 100 (FieldName)



state 191

    FieldName  ->  tok_const .   (rule 101)

    $default	reduce using rule 101 (FieldName)



state 192

    FieldName  ->  tok_required .   (rule 102)

    $default	reduce using rule 102 (FieldName)



state 193

    FieldName  ->  tok_optional .   (rule 103)

    $default	reduce using rule 103 (FieldName)



state 194

    FieldName  ->  tok_union .   (rule 95)

    $default	reduce using rule 95 (FieldName)



state 195

    Field  ->  CaptureDocText FieldIdentifier FieldRequiredness FieldType FieldReference FieldName . FieldValue XsdOptional XsdNillable XsdAttributes TypeAnnotations CommaOrSemicolonOptional   (rule 71)

    '='	shift, and go to state 198

    $default	reduce using rule 112 (FieldValue)

    FieldValue	go to state 199



state 196

    Function  ->  CaptureDocText Oneway FunctionType tok_identifier . '(' FieldList ')' Throws TypeAnnotations CommaOrSemicolonOptional   (rule 63)

    '('	shift, and go to state 200



state 197

    ConstMapContents  ->  ConstMapContents ConstValue ':' ConstValue CommaOrSemicolonOptional .   (rule 42)

    $default	reduce using rule 42 (ConstMapContents)



state 198

    FieldValue  ->  '=' . ConstValue   (rule 111)

    tok_identifier	shift, and go to state 103
    tok_literal	shift, and go to state 104
    tok_int_constant	shift, and go to state 105
    tok_dub_constant	shift, and go to state 106
    '{'	shift, and go to state 107
    '['	shift, and go to state 108

    tok_identifier	[reduce using rule 38 (ConstList)]
    tok_int_constant	[reduce using rule 38 (ConstList)]
    $default	reduce using rule 38 (ConstList)

    ConstValue	go to state 201
    ConstList	go to state 110
    ConstMap	go to state 111



state 199

    Field  ->  CaptureDocText FieldIdentifier FieldRequiredness FieldType FieldReference FieldName FieldValue . XsdOptional XsdNillable XsdAttributes TypeAnnotations CommaOrSemicolonOptional   (rule 71)

    tok_xsd_optional	shift, and go to state 202

    $default	reduce using rule 50 (XsdOptional)

    XsdOptional	go to state 203



state 200

    Function  ->  CaptureDocText Oneway FunctionType tok_identifier '(' . FieldList ')' Throws TypeAnnotations CommaOrSemicolonOptional   (rule 63)

    $default	reduce using rule 70 (FieldList)

    FieldList	go to state 204



state 201

    FieldValue  ->  '=' ConstValue .   (rule 111)

    $default	reduce using rule 111 (FieldValue)



state 202

    XsdOptional  ->  tok_xsd_optional .   (rule 49)

    $default	reduce using rule 49 (XsdOptional)



state 203

    Field  ->  CaptureDocText FieldIdentifier FieldRequiredness FieldType FieldReference FieldName FieldValue XsdOptional . XsdNillable XsdAttributes TypeAnnotations CommaOrSemicolonOptional   (rule 71)

    tok_xsd_nillable	shift, and go to state 205

    $default	reduce using rule 52 (XsdNillable)

    XsdNillable	go to state 206



state 204

    Function  ->  CaptureDocText Oneway FunctionType tok_identifier '(' FieldList . ')' Throws TypeAnnotations CommaOrSemicolonOptional   (rule 63)
    FieldList  ->  FieldList . Field   (rule 69)

    ')'	shift, and go to state 207

    $default	reduce using rule 2 (CaptureDocText)

    CaptureDocText	go to state 97
    Field	go to state 98



state 205

    XsdNillable  ->  tok_xsd_nillable .   (rule 51)

    $default	reduce using rule 51 (XsdNillable)



state 206

    Field  ->  CaptureDocText FieldIdentifier FieldRequiredness FieldType FieldReference FieldName FieldValue XsdOptional XsdNillable . XsdAttributes TypeAnnotations CommaOrSemicolonOptional   (rule 71)

    tok_xsd_attrs	shift, and go to state 208

    $default	reduce using rule 54 (XsdAttributes)

    XsdAttributes	go to state 209



state 207

    Function  ->  CaptureDocText Oneway FunctionType tok_identifier '(' FieldList ')' . Throws TypeAnnotations CommaOrSemicolonOptional   (rule 63)

    tok_throws	shift, and go to state 210

    $default	reduce using rule 68 (Throws)

    Throws	go to state 211



state 208

    XsdAttributes  ->  tok_xsd_attrs . '{' FieldList '}'   (rule 53)

    '{'	shift, and go to state 212



state 209

    Field  ->  CaptureDocText FieldIdentifier FieldRequiredness FieldType FieldReference FieldName FieldValue XsdOptional XsdNillable XsdAttributes . TypeAnnotations CommaOrSemicolonOptional   (rule 71)

    '('	shift, and go to state 59

    $default	reduce using rule 139 (TypeAnnotations)

    TypeAnnotations	go to state 213



state 210

    Throws  ->  tok_throws . '(' FieldList ')'   (rule 67)

    '('	shift, and go to state 214



state 211

    Function  ->  CaptureDocText Oneway FunctionType tok_identifier '(' FieldList ')' Throws . TypeAnnotations CommaOrSemicolonOptional   (rule 63)

    '('	shift, and go to state 59

    $default	reduce using rule 139 (TypeAnnotations)

    TypeAnnotations	go to state 215



state 212

    XsdAttributes  ->  tok_xsd_attrs '{' . FieldList '}'   (rule 53)

    $default	reduce using rule 70 (FieldList)

    FieldList	go to state 216



state 213

    Field  ->  CaptureDocText FieldIdentifier FieldRequiredness FieldType FieldReference FieldName FieldValue XsdOptional XsdNillable XsdAttributes TypeAnnotations . CommaOrSemicolonOptional   (rule 71)

    ','	shift, and go to state 93
    ';'	shift, and go to state 94

    $default	reduce using rule 22 (CommaOrSemicolonOptional)

    CommaOrSemicolonOptional	go to state 217



state 214

    Throws  ->  tok_throws '(' . FieldList ')'   (rule 67)

    $default	reduce using rule 70 (FieldList)

    FieldList	go to state 218



state 215

    Function  ->  CaptureDocText Oneway FunctionType tok_identifier '(' FieldList ')' Throws TypeAnnotations . CommaOrSemicolonOptional   (rule 63)

    ','	shift, and go to state 93
    ';'	shift, and go to state 94

    $default	reduce using rule 22 (CommaOrSemicolonOptional)

    CommaOrSemicolonOptional	go to state 219



state 216

    XsdAttributes  ->  tok_xsd_attrs '{' FieldList . '}'   (rule 53)
    FieldList  ->  FieldList . Field   (rule 69)

    '}'	shift, and go to state 220

    $default	reduce using rule 2 (CaptureDocText)

    CaptureDocText	go to state 97
    Field	go to state 98



state 217

    Field  ->  CaptureDocText FieldIdentifier FieldRequiredness FieldType FieldReference FieldName FieldValue XsdOptional XsdNillable XsdAttributes TypeAnnotations CommaOrSemicolonOptional .   (rule 71)

    $default	reduce using rule 71 (Field)



state 218

    Throws  ->  tok_throws '(' FieldList . ')'   (rule 67)
    FieldList  ->  FieldList . Field   (rule 69)

    ')'	shift, and go to state 221

    $default	reduce using rule 2 (CaptureDocText)

    CaptureDocText	go to state 97
    Field	go to state 98



state 219

    Function  ->  CaptureDocText Oneway FunctionType tok_identifier '(' FieldList ')' Throws TypeAnnotations CommaOrSemicolonOptional .   (rule 63)

    $default	reduce using rule 63 (Function)



state 220

    XsdAttributes  ->  tok_xsd_attrs '{' FieldList '}' .   (rule 53)

    $default	reduce using rule 53 (XsdAttributes)



state 221

    Throws  ->  tok_throws '(' FieldList ')' .   (rule 67)

    $default	reduce using rule 67 (Throws)



state 222

    $EOI	shift, and go to state 223



state 223

    $EOI	shift, and go to state 224



state 224

    $default	accept
