;;; thrift.wy -- LALR grammar for thrift

;;; Commentary:
;;
;; This grammar fully parses correct apache thrift 0.17.0 syntax.
;;
;; It is based on the grammar for thrift version 0.17.0

%{
  ;; Stack of enum names in scope.
  (defvar wisent-thrift-wy--enums nil)
  }

%package wisent-thrift-wy
%provide thrift-wy

%languagemode thrift-mode

;; The default goal.
%start program

;;; lexer
;; Strings identifier
%type <symbol>      ;;syntax "\\(\\sw\\|\\s_\\)+"
%token <symbol>     tok_identifier
%type <string>      ;;syntax "\\s\"" matchdatatype sexp
%token <string>     tok_literal

;; Constant values
%type <iconst>      ;;syntax "[1-9][0-9]*[lL]\\|0[xX][[:xdigit:]]+[lL]\\|0[0-7]*[lL]"
%token <iconst> tok_int_constant
%type <dconst>      ;;syntax semantic-lex-number-expression
%token <dconst> tok_dub_constant

;; Generate a keyword analyzer
%type  <keyword> ;;syntax "\\(\\sw\\|\\s_\\)+" matchdatatype keyword

;; Header keywords
%token <keyword> "include"
%token <keyword> "namespace"

;; Define the lexer for this grammar
(define-lex wisent-thrift-lexer
  "Lexical analyzer that handles Thrift buffers.
It ignores whitespaces, newlines and comments."
  semantic-lex-ignore-whitespace
  semantic-lex-ignore-newline
  semantic-lex-ignore-comments
  ;;;; Auto-generated analyzers.
  wisent-thrift-wy--<symbol>-regexp-analyzer
  wisent-thrift-wy--<string>-regexp-analyzer
  wisent-thrift-wy--<iconst>-regexp-analyzer
  wisent-thrift-wy--<dconst>-regexp-analyzer
  wisent-thrift-wy--<keyword>-regexp-analyzer
  ;;;;
  semantic-lex-default-action)

;;; thrift.wy ends here
